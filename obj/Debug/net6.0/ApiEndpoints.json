[
  {
    "ContainingType": "FlightDocs.Controllers.AccountController",
    "Method": "addAccount",
    "RelativePath": "api/Account",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "account",
        "Type": "FlightDocs.DTOs.AccountDTO",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "FlightDocs.Controllers.AccountController",
    "Method": "getAccounts",
    "RelativePath": "api/Account",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "FlightDocs.Controllers.AccountController",
    "Method": "Authenticate",
    "RelativePath": "api/Account/Authenticated",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "loginDTO",
        "Type": "FlightDocs.DTOs.LoginDTO",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "FlightDocs.Controllers.DocumentController",
    "Method": "AddDocument",
    "RelativePath": "api/Document/add-doc",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "Name",
        "Type": "Microsoft.AspNetCore.Http.IFormFile",
        "IsRequired": false
      },
      {
        "Name": "TypeId",
        "Type": "System.Guid",
        "IsRequired": false
      },
      {
        "Name": "flightNo",
        "Type": "System.String",
        "IsRequired": false
      },
      {
        "Name": "updatedBy",
        "Type": "System.String",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "FlightDocs.Controllers.DocumentController",
    "Method": "AddDocumentType",
    "RelativePath": "api/Document/add-type",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "request",
        "Type": "FlightDocs.Models.DocumentType",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "FlightDocs.Controllers.DocumentController",
    "Method": "ConfirmDocument",
    "RelativePath": "api/Document/Approval",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "request",
        "Type": "FlightDocs.DTOs.ApprovalDTO",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "FlightDocs.Controllers.DocumentController",
    "Method": "GetDocumentDetail",
    "RelativePath": "api/Document/DocumentDetail/{id}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "docId",
        "Type": "System.Guid",
        "IsRequired": false
      },
      {
        "Name": "id",
        "Type": "",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "FlightDocs.Controllers.DocumentController",
    "Method": "DownloadDocument",
    "RelativePath": "api/Document/download/{id}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Guid",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "FlightDocs.Controllers.DocumentController",
    "Method": "getByAccount",
    "RelativePath": "api/Document/getDocumentByAccount",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "request",
        "Type": "System.Guid",
        "IsRequired": false
      },
      {
        "Name": "startDate",
        "Type": "System.Nullable\u00601[[System.DateTime, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]",
        "IsRequired": false
      },
      {
        "Name": "endDate",
        "Type": "System.Nullable\u00601[[System.DateTime, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "FlightDocs.Controllers.DocumentController",
    "Method": "AddTypePermisison",
    "RelativePath": "api/Document/type-addpermission",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "request",
        "Type": "FlightDocs.DTOs.PermissionTypeDTO",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "FlightDocs.Controllers.DocumentController",
    "Method": "updateDocument",
    "RelativePath": "api/Document/update-doc",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "Name",
        "Type": "Microsoft.AspNetCore.Http.IFormFile",
        "IsRequired": false
      },
      {
        "Name": "DocumentId",
        "Type": "System.Guid",
        "IsRequired": false
      },
      {
        "Name": "GroupId",
        "Type": "System.Guid",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "FlightDocs.Controllers.FlightController",
    "Method": "Add",
    "RelativePath": "api/Flight/add-flight",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "request",
        "Type": "FlightDocs.DTOs.FlightDTO",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "FlightDocs.Controllers.FlightController",
    "Method": "AddFlightAccount",
    "RelativePath": "api/Flight/add-flightAccount",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "request",
        "Type": "FlightDocs.DTOs.FlightAccountDTO",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "FlightDocs.Controllers.WeatherForecastController",
    "Method": "Get",
    "RelativePath": "WeatherForecast",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[FlightDocs.WeatherForecast, FlightDocs, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ],
    "EndpointName": "GetWeatherForecast"
  }
]